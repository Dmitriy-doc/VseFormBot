from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from states.izvesh import IzveshForm
from states.otkaz import OtkazForm  # –µ—Å–ª–∏ –±—É–¥–µ—à—å –¥–æ–±–∞–≤–ª—è—Ç—å FSM –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ñ–æ—Ä–º

router = Router()

@router.message(CommandStart())
async def cmd_start(message: Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üõë –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∏–∑–≤–µ—â–µ–Ω–∏–µ", callback_data="form_izvesh")],
        [InlineKeyboardButton(text="üìÑ –û—Ç–∫–∞–∑ –æ—Ç –≥–æ—Å–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏", callback_data="form_otkaz")],
        # –î–æ–±–∞–≤–∏—à—å —Å—é–¥–∞ –µ—â—ë –∫–Ω–æ–ø–∫–∏, –∫–æ–≥–¥–∞ –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ —Ñ–æ—Ä–º—ã
    ])
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–ø—Ä–∞–≤–∫–∏:", reply_markup=keyboard)

@router.callback_query(F.data == "form_izvesh")
async def start_izvesh(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –§–ò–û –ø–∞—Ü–∏–µ–Ω—Ç–∞ (–ø–æ–ª–Ω–æ—Å—Ç—å—é):")
    await state.set_state(IzveshForm.fio_patient)

@router.callback_query(F.data == "form_otkaz")
async def start_otkaz(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –§–ò–û –ø–∞—Ü–∏–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–∫–∞–∑–∞ –æ—Ç –≥–æ—Å–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏:")
    await state.set_state(OtkazForm.fio_patient)
